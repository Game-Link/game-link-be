# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CD (Image Build)

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Make test properties
      env:
        PROPERTIES: ${{ secrets.PROPERTIES_TEST }}
      run: |
        mkdir -p ./src/test/resources && cd "$_"
        touch ./application.yml
        echo $PROPERTIES | base64 --decode > application.yml
      shell: bash

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Docker build
      env:
        USERNAME: ${{ secrets.DOCKER_USERNAME }}
        REPO: ${{ secrets.DOCKER_REPO }}
      run: |
        docker build -t $IMAGE_NAME:${GITHUB_SHA::7} -t $IMAGE_NAME:latest .
        
    - name: Docker push
      env:
        USERNAME: ${{ secrets.DOCKER_USERNAME }}
        PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        REPO: ${{ secrets.DOCKER_REPO }}
      run: |
        docker login -u $USERNAME -p $PASSWORD
        docker push $IMAGE_NAME:${GITHUB_SHA::7}
        docker push $IMAGE_NAME:latest
        

